import { createClient } from '@supabase/supabase-js';

// Obtener variables de entorno
const supabaseUrl = import.meta.env.VITE_SUPABASE_URL;
const supabaseAnonKey = import.meta.env.VITE_SUPABASE_ANON_KEY;

console.log('üîß Configuraci√≥n de Supabase:');
console.log('URL:', supabaseUrl || 'NO EST√Å CONFIGURADA');
console.log('Key:', supabaseAnonKey ? 'Presente' : 'NO EST√Å CONFIGURADA');

// Verificar si las variables est√°n correctamente configuradas
const isConfigured = supabaseUrl && 
                     supabaseAnonKey && 
                     supabaseUrl.includes('supabase.co');

if (!isConfigured) {
  console.error('‚ö†Ô∏è Supabase NO est√° configurado correctamente.');
  console.error('üìù Aseg√∫rate de que en tu archivo .env tienes:');
  console.error('   VITE_SUPABASE_URL=https://tu-proyecto.supabase.co');
  console.error('   VITE_SUPABASE_ANON_KEY=tu-clave-an√≥nima');
  throw new Error('Configuraci√≥n de Supabase incorrecta.');
}

// Crear cliente solo si est√° correctamente configurado
export const supabase = createClient(supabaseUrl, supabaseAnonKey, {
  auth: {
    autoRefreshToken: true,
    persistSession: true,
    detectSessionInUrl: true
  }
});

// Funci√≥n para verificar conexi√≥n y sesi√≥n
export async function verificarSupabase() {
  try {
    // Verificar conexi√≥n a la base (ajusta si quieres otra tabla)
    const { count, error } = await supabase.from('medical_centers').select('id', { count: 'exact', head: true });
    if (error) {
      console.error('‚ùå Error al conectar con la base:', error.message);
    } else {
      console.log(`‚úÖ Conexi√≥n exitosa. Centros m√©dicos: ${count}`);
    }

    // Verificar sesi√≥n activa
    const { data: sessionData, error: errorAuth } = await supabase.auth.getSession();
    if (errorAuth) {
      console.error('‚ùå Error en autenticaci√≥n:', errorAuth.message);
    } else {
      console.log('üîê Sistema de autenticaci√≥n listo.');
      if (sessionData.session) {
        console.log('üë§ Usuario logueado:', sessionData.session.user.email);
      } else {
        console.log('üõà No hay usuario logueado.');
      }
    }
  } catch (err) {
    console.error('Error en verificaci√≥n:', err);
  }
}

// Llamar a esta funci√≥n al cargar tu app o cuando sea conveniente
verificarSupabase();
